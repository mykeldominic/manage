{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/services/auth.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["DashboardIndex","componentWillMount","isLoggedIn","navigate","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","React","Component","propTypes","data","PropTypes","object","isRequired","location","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","string","func","isBrowser","window","getUser","localStorage","getItem","JSON","parse","getToken","setUser","user","setItem","stringify","setRefreshToken","handleLogin","_ref2","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","_ref","email","password","config","response","wrap","_context","prev","next","SERVER_URL","headers","client-key","axios","post","sent","status","accessToken","refreshToken","abrupt","adminUser","console","log","t0","stop","_x","apply","this","arguments","firstName","logout","callback","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-e1105d543641b202f0ff.js","sourcesContent":["import React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport { getUser, isLoggedIn } from \"../services/auth\"\r\nimport { graphql } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass DashboardIndex extends React.Component {\r\n\r\n\tcomponentWillMount() {\r\n\t\tisLoggedIn() ? navigate(`/notifications`) : navigate(`/app/login`)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// function DashboardIndex({ data, location }) {\r\n// \tconst { title } = data.site.siteMetadata\r\n\r\n// \tcomponentDidMount() {\r\n// \t\tif (typeof window !== 'undefined') {\r\n// \t\t  window.removeEventListener('resize', this.setChartDimensions)\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t{isLoggedIn() ? (\r\n// \t\t\t\t\tnavigate(`/notifications`)\r\n// \t\t\t) : (\r\n// \t\t\t\tnavigate(`/app/login`)\r\n// \t\t\t)}\r\n// \t\t</div>\r\n// \t)\r\n// }\r\nDashboardIndex.propTypes = {\r\n\tdata: PropTypes.object.isRequired,\r\n\tlocation: PropTypes.object,\r\n}\r\nexport const pageQuery = graphql`\r\n\tquery {\r\n\t\tsite {\r\n\t\t\tsiteMetadata {\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\nexport default DashboardIndex","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import axios from \"axios\";\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst SERVER_URL = 'http://173.255.212.65:8080';\r\n\r\nexport const isBrowser = () => typeof window !== \"undefined\"\r\n\r\nexport const getUser = () =>\r\n    isBrowser() && window.localStorage.getItem(\"gatsbyUser\")\r\n        ? JSON.parse(window.localStorage.getItem(\"gatsbyUser\"))\r\n        : {}\r\n\r\nexport const getToken = () =>\r\nisBrowser() && window.localStorage.getItem(\"gatsbyToken\")\r\n    ? JSON.parse(window.localStorage.getItem(\"gatsbyToken\"))\r\n    : {}\r\n\r\nexport const getRefreshToken = () =>\r\nisBrowser() && window.localStorage.getItem(\"gatsbyRefreshToken\")\r\n    ? JSON.parse(window.localStorage.getItem(\"gatsbyRefreshToken\"))\r\n    : {}\r\n\r\nconst setUser = user => window.localStorage.setItem(\"gatsbyUser\", JSON.stringify(user));\r\nconst setToken = user => window.localStorage.setItem(\"gatsbyToken\", JSON.stringify(user));\r\nconst setRefreshToken = user => window.localStorage.setItem(\"gatsbyRefreshToken\", JSON.stringify(user));\r\n\r\nexport const handleLogin = async ({ email, password }) => {\r\n    const LOGIN_ENDPOINT = SERVER_URL+'/v1/api/app/auth/admin/login';\r\n    let config = {\r\n        headers: {\r\n            \"client-key\":\"julklsjdmmaludnm01#\"\r\n        }\r\n    }\r\n    let data = {\r\n        \"email\": email,\r\n        \"password\": password\r\n    }\r\n    \r\n    try {\r\n        let response = await axios.post(LOGIN_ENDPOINT, data, config);\r\n        \r\n        if (response.status === 200) {\r\n            setToken(response.data.data.accessToken)\r\n            setRefreshToken(response.data.data.refreshToken)\r\n            return setUser(response.data.data.adminUser)\r\n            \r\n            // return setUser({\r\n            //     username: response.data.data.adminUser.userId,\r\n            //     accessTokenExpiryTimeInMinutes: response.data.data.accessToken.expiryTimeInMinutes,\r\n            //     accessToken: response.data.data.accessToken.token,\r\n            //     accountStatus: response.data.data.adminUser.accountStatus,\r\n            //     email: response.data.data.adminUser.email,\r\n            //     firstName: response.data.data.adminUser.firstName,\r\n            //     lastName: response.data.data.adminUser.lastName,\r\n            //     userId: response.data.data.adminUser.userId,\r\n            //     refreshTokenExpiryTimeInMinutes: response.data.data.refreshToken.expiryTimeInMinutes,\r\n            //     refreshToken: response.data.data.refreshToken.token,\r\n            //     message: response.data.message,\r\n            // });\r\n        } else {\r\n            //display error\r\n            console.log('error');\r\n        }\r\n    } catch (error) {\r\n        console.log(\"the error\")\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n    const user = getUser();\r\n    return !!user.firstName\r\n}\r\n\r\nexport const logout = callback => {\r\n    setUser({})\r\n    callback()\r\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}